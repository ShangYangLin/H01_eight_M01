# -*- coding: utf-8 -*-
"""Sub-plan8_M01 for NTU AI Project_RF

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MfMCu0Exz2DMQpwMM8LjTCQvftIrVI6o
"""

import io
from google.colab import files
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import ensemble, preprocessing, metrics
from sklearn.tree import export_graphviz

# 上傳excel檔案
uploaded = files.upload()

df_data = pd.read_excel(io.BytesIO(uploaded['M01資料表.xlsx']))
print(len(df_data))
df_data.head()

##bins=[0, 18, 24, 31],
df_data['Label'] = pd.cut(x=df_data['MMSE Total (30)'], bins=[0, 27, 31],
                     labels=[1, 0])
print(df_data['Label'].value_counts())

y = df_data['Label'].astype('category')
df_data1 = df_data.drop(columns=['MMSE Total (30)', '研究一', 'Label'])
featurename=list(df_data1.columns)
targetname='Label'
X = df_data1.values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=77, stratify=y)

print('train shape:', X_train.shape)
print('test shape:', X_test.shape)
#print(featurename)

forest = ensemble.RandomForestClassifier(n_estimators = 100)
forest_fit = forest.fit(X_train, y_train)
# 預測
test_y_predicted = forest.predict(X_test)
# 績效
accuracy = metrics.accuracy_score(y_test, test_y_predicted)
print(accuracy)

# Export as dot file
estimator = forest.estimators_[5]
export_graphviz(estimator, out_file='tree.dot',
                feature_names = featurename,
                class_names = targetname,
                rounded = True, proportion = False,
                precision = 2, filled = True)

# Convert to png using system command (requires Graphviz)
from subprocess import call
call(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=600'])

# Display in jupyter notebook
from IPython.display import Image
Image(filename = 'tree.png')